<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:context="http://www.springframework.org/schema/context" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ss="http://www.springframework.org/schema/security" xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"

 xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.1/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">



    <flow name="salesforce-connect-sc-main">
        <http:listener config-ref="salesforce-connect-sc-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <http:basic-security-filter realm="mule-realm" doc:name="Authentication Filter"/>
        <apikit:router config-ref="salesforce-connect-sc-config" doc:name="APIkit Router" />
        <exception-strategy ref="salesforce-connect-sc-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="salesforce-connect-sc-console">
        <http:listener config-ref="salesforce-connect-sc-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="salesforce-connect-sc-config" doc:name="APIkit Console" />
    </flow>
    <flow name="get:/accounts:salesforce-connect-sc-config">
    <mule-ss:http-security-filter realm="mule-realm" securityProviders="memory-provider"/>
        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT AccountNumber,BillingState,Description,Id,Name,Phone,Website FROM Account" doc:name="Salesforce"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="get:/accounts/{id}:salesforce-connect-sc-config" tracking:enable-default-events="true">
    <mule-ss:http-security-filter realm="mule-realm" securityProviders="memory-provider"/>
        <set-variable variableName="id" value="#[message.inboundProperties.'http.uri.params'.get('id')]" doc:name="id"/>
        <validation:matches-regex message="ID did not match AlphaNumeric requirmenent of valid ID" value="#[flowVars.id]" regex="^[a-zA-Z0-9]+$" doc:name="Validation"/>
        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT AccountNumber,BillingState,Description,Id,Name,Phone,Website FROM Account WHERE Id = '#[flowVars.id]'" doc:name="Salesforce"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <choice doc:name="Choice">
            <when expression="#[!payload.equals(&quot;[]&quot;)]">
                <set-payload value="#[payload]" doc:name="Retrieve Account"/>
                <tracking:custom-event event-name="Getting account by ID (passed)" doc:name="Custom Business Event">
                    <tracking:meta-data key="ID" value="#[flowVars.id]"/>
                </tracking:custom-event>
            </when>
            <otherwise>
                <set-property propertyName="http status code " value="404" doc:name="HTTP status code 404"/>
                <set-payload value="There is no account associated with this ID " doc:name="Set Payload"/>
                <tracking:custom-event event-name="Getting account by ID (failed)" doc:name="Custom Business Event">
                    <tracking:meta-data key="ID" value="#[flowVars.id]"/>
                </tracking:custom-event>
            </otherwise>
        </choice>
        <tracking:transaction id="get-accounts-id-#[java.util.UUID.randomUUID().toString()]"/>
    </flow>
    <flow name="delete:/accounts/{id}:salesforce-connect-sc-config" tracking:enable-default-events="true">
    <mule-ss:http-security-filter realm="mule-realm" securityProviders="memory-provider"/>
        <set-variable variableName="id" value="#[message.inboundProperties.'http.uri.params'.get('id')]" doc:name="id"/>
        <set-payload value="#[[flowVars.id]]" doc:name="Set Payload"/>
        <sfdc:delete config-ref="Salesforce__Basic_Authentication"  doc:name="Salesforce"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Delete response = #[payload], Payload ID = #[payload.id]" level="DEBUG" doc:name="delete account " category="Delete"/>
        <choice doc:name="Choice">
            <when expression="#[payload.id == null]">
                <set-payload value="the account with the id #[flowVars.id]" doc:name="account deleted "/>
                <tracking:custom-event event-name="deleting account by ID (pass)" doc:name="Custom Business Event">
                    <tracking:meta-data key="ID" value="#[flowVars.id]"/>
                </tracking:custom-event>
            </when>
            <otherwise>
                <set-property propertyName="http status code " value="409" doc:name="HTTP Status 409"/>
                <set-payload value="The account could not successfully be deleted" doc:name="account was not deleted "/>
                <tracking:custom-event event-name="delete by account by ID (failed)" doc:name="Custom Business Event">
                    <tracking:meta-data key="ID" value="#[flowVars.id]"/>
                </tracking:custom-event>
            </otherwise>
        </choice>
        <tracking:transaction id="delete-accounts-id-#[java.util.UUID.randomUUID().toString()]"/>
    </flow>
    <flow name="post:/accounts:salesforce-connect-sc-config" tracking:enable-default-events="true">
    <mule-ss:http-security-filter realm="mule-realm" securityProviders="memory-provider"/>
        <logger message="#[payload]" level="TRACE" doc:name="Pulling new accounts body data" category="Posting "/>
        <dw:transform-message doc:name="Transform Message" metadata:id="6475bcd0-67af-47e2-b988-c31e09917c9f">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
	Name: payload.AccountName,
	ParentId: payload.ParentAccount,
	BillingState: payload.State,
	Phone: payload.Phone,
	Fax: payload.Fax,
	Industry: payload.Industry,
	Description: payload.Description
}]]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="TRACE" doc:name="Sending Transformed data" category="Posting"/>
        <sfdc:create config-ref="Salesforce__Basic_Authentication" type="Account" doc:name="Salesforce">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <set-payload value="{&quot;message&quot;: &quot;Company was added&quot;}" doc:name="Set Payload" />
        <tracking:transaction id="post-accounts-#[java.util.UUID.randomUUID().toString()]"/>
    </flow>
    <apikit:mapping-exception-strategy name="salesforce-connect-sc-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    <flow name="put:/accounts/{id}:salesforce-connect-sc-config" tracking:enable-default-events="true">
        <logger message="#[payload]" level="TRACE" doc:name="Updated account data" category="Put"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
[{
	Id: flowVars.id,
	Name: payload.AccountName,
	ParentId: payload.ParentAccount,
	BillingState: payload.State,
	Phone: payload.Phone,
	Fax: payload.Fax,
	Industry: payload.Industry,
	Description: payload.Description
}]]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:update config-ref="Salesforce__Basic_Authentication" type="Account" doc:name="Salesforce">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:update>
        <dw:transform-message doc:name="Copy_of_Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[payload != null]">
                <set-payload value="The account has been updated" doc:name="Account updated"/>
                <tracking:custom-event event-name="Updated account by ID (passed)" doc:name="Custom Business Event">
                    <tracking:meta-data key="ID" value="#[flowVars.id]"/>
                </tracking:custom-event>
            </when>
            <otherwise>
                <set-property propertyName="http status code " value="404" doc:name="HTTP status code 404"/>
                <set-payload value="The account could not be updated " doc:name="Account not updated"/>
                <tracking:custom-event event-name="Updated account by ID (failed)" doc:name="Custom Business Event">
                    <tracking:meta-data key="ID" value="#[flowVars.id]"/>
                </tracking:custom-event>
            </otherwise>
        </choice>
        <tracking:transaction id="put-accounts-id-#[java.util.UUID.randomUUID().toString()]"/>
    </flow>
</mule>
